<div class="container mx-auto p-4 max-w-4xl">
  <div class="flex items-center justify-between mb-6">
    <h1 class="text-2xl font-bold text-gray-700">Editor Teks</h1>
    <div class="flex space-x-2">
      <a href="/" class="flex items-center text-blue-500 hover:text-blue-700">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 mr-1"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z"
            clip-rule="evenodd"
          />
        </svg>
        Dashboard
      </a>
    </div>
  </div>

  <div id="statusMessage" class="hidden mb-4 px-4 py-3 rounded"></div>

  <div class="bg-white rounded-lg shadow-md overflow-hidden">
    <div class="border-b border-gray-200 p-4 flex justify-between items-center">
      <div class="flex items-center">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 text-gray-500 mr-2"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
          />
        </svg>
        <h2 class="text-lg font-medium text-gray-700">
          <%= locals.documentTitle || 'Dokumen Tanpa Judul' %>
        </h2>
      </div>
      <div class="flex items-center">
        <span id="charCount" class="text-sm text-gray-500">
          <% if (locals.documentText) { %> <%= documentText.length %> karakter
          <% } else { %> 0 karakter <% } %>
        </span>
      </div>
    </div>

    <div class="p-4">
      <div id="viewMode" class="<%= locals.isEditing ? 'hidden' : '' %>">
        <div class="prose max-w-none mb-4">
          <% if (locals.documentText) { %>
          <div class="whitespace-pre-wrap text-gray-700">
            <%= documentText %>
          </div>
          <% } else { %>
          <p class="text-gray-500 italic">
            Tidak ada teks. Klik tombol Edit untuk mulai menulis.
          </p>
          <% } %>
        </div>
        <button
          id="editButton"
          class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-4 rounded transition-colors"
        >
          Edit Teks
        </button>
      </div>

      <div id="editMode" class="<%= locals.isEditing ? '' : 'hidden' %>">
        <div class="mb-4">
          <textarea
            id="textEditor"
            class="w-full p-3 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500 h-64"
            placeholder="Tulis teks Anda di sini (minimal 100 karakter)..."
            minlength="100"
          >
<%= locals.documentText || '' %></textarea
          >
          <div class="flex justify-between mt-2">
            <span id="charCountEdit" class="text-sm text-gray-500">
              <% if (locals.documentText) { %> <%= documentText.length %>
              karakter <% } else { %> 0 karakter <% } %>
            </span>
            <span
              id="minLengthIndicator"
              class="text-sm text-red-500 <%= locals.documentText && documentText.length >= 100 ? 'hidden' : '' %>"
            >
              Minimal 100 karakter diperlukan
            </span>
          </div>
        </div>
        <div class="flex space-x-3">
          <button
            type="button"
            id="cancelButton"
            class="bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded transition-colors"
          >
            Batal
          </button>
          <button
            type="button"
            id="saveButton"
            class="bg-green-500 hover:bg-green-600 text-white font-medium py-2 px-4 rounded transition-colors"
            disabled
          >
            Simpan Perubahan
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const viewMode = document.getElementById("viewMode");
    const editMode = document.getElementById("editMode");
    const editButton = document.getElementById("editButton");
    const cancelButton = document.getElementById("cancelButton");
    const saveButton = document.getElementById("saveButton");
    const textEditor = document.getElementById("textEditor");
    const charCountEdit = document.getElementById("charCountEdit");
    const minLengthIndicator = document.getElementById("minLengthIndicator");
    const statusMessage = document.getElementById("statusMessage");

    // Original text to revert to if canceled
    const originalText = textEditor.value;

    // Show status message
    function showStatus(message, isError = false) {
      statusMessage.textContent = message;
      statusMessage.classList.remove(
        "hidden",
        "bg-green-100",
        "text-green-700",
        "border-green-200",
        "bg-red-100",
        "text-red-700",
        "border-red-200"
      );

      if (isError) {
        statusMessage.classList.add(
          "bg-red-100",
          "text-red-700",
          "border",
          "border-red-200"
        );
      } else {
        statusMessage.classList.add(
          "bg-green-100",
          "text-green-700",
          "border",
          "border-green-200"
        );
      }

      // Auto hide after 5 seconds
      setTimeout(() => {
        statusMessage.classList.add("hidden");
      }, 5000);
    }

    // Toggle between view and edit modes
    editButton.addEventListener("click", function () {
      viewMode.classList.add("hidden");
      editMode.classList.remove("hidden");
      textEditor.focus();
      validateTextLength();
    });

    cancelButton.addEventListener("click", function () {
      if (confirm("Apakah Anda yakin ingin membatalkan perubahan?")) {
        editMode.classList.add("hidden");
        viewMode.classList.remove("hidden");
        // Reset to original text
        textEditor.value = originalText;
        updateCharCount();
      }
    });

    // Character count and validation
    textEditor.addEventListener("input", function () {
      updateCharCount();
      validateTextLength();
    });

    function updateCharCount() {
      const count = textEditor.value.length;
      charCountEdit.textContent = `${count} karakter`;
    }

    function validateTextLength() {
      const count = textEditor.value.length;
      if (count >= 100) {
        minLengthIndicator.classList.add("hidden");
        saveButton.disabled = false;
      } else {
        minLengthIndicator.classList.remove("hidden");
        saveButton.disabled = true;
      }
    }

    // Initialize validation on page load
    validateTextLength();

    // Save text using fetch API
    saveButton.addEventListener("click", function () {
      const text = textEditor.value;

      // Validate minimum length
      if (text.length < 100) {
        showStatus("Teks harus minimal 100 karakter.", true);
        return;
      }

      // Disable button and show loading state
      saveButton.disabled = true;
      saveButton.textContent = "Menyimpan...";

      // Send data to server using fetch API
      fetch("/save-prompt", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ text: text }),
      })
        .then((response) => {
          if (!response.ok) {
            throw new Error("Gagal menyimpan teks");
          }
          return response.json();
        })
        .then((data) => {
          // Success handling
          showStatus("Teks berhasil disimpan!");

          // Update the view mode with new text
          const viewModeContent = viewMode.querySelector(".prose div");
          if (viewModeContent) {
            viewModeContent.textContent = text;
          }

          // Switch back to view mode
          editMode.classList.add("hidden");
          viewMode.classList.remove("hidden");
        })
        .catch((error) => {
          // Error handling
          showStatus(`Error: ${error.message}`, true);
        })
        .finally(() => {
          // Reset button state
          saveButton.disabled = false;
          saveButton.textContent = "Simpan Perubahan";
        });
    });
  });
</script>
